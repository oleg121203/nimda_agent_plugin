name: VS Code Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test_extension:
        description: 'Test VS Code Extension'
        required: false
        default: 'false'
        type: boolean

jobs:
  vscode-setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup VS Code Environment
      run: |
        echo "üîß Setting up VS Code compatible environment..."
        
        # Creating .vscode directory —è–∫—â–æ does not exist
        mkdir -p .vscode
        
        # Creating –±–∞–∑–æ–≤–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å VS Code
        cat > .vscode/settings.json << 'EOF'
        {
          "python.defaultInterpreterPath": "./nimda_env/bin/python",
          "python.terminal.activateEnvironment": true,
          "python.linting.enabled": true,
          "python.linting.flake8Enabled": true,
          "python.formatting.provider": "black",
          "files.associations": {
            "*.md": "markdown"
          },
          "markdown.preview.linkify": true,
          "git.autofetch": true,
          "terminal.integrated.env.linux": {
            "NIMDA_AGENT_PATH": "${workspaceFolder}/nimda_agent_plugin"
          }
        }
        EOF

    - name: Test VS Code Configuration
      run: |
        echo "üß™ Testing VS Code configuration..."
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É JSON files
        for file in .vscode/*.json; do
          if [ -f "$file" ]; then
            echo "Validating $file..."
            python3 -m json.tool "$file" > /dev/null && echo "‚úÖ $file is valid" || echo "‚ùå $file has errors"
          fi
        done

    - name: Test NIMDA Integration
      run: |
        echo "ü§ñ Testing NIMDA Agent integration..."
        
        if [ -f "nimda_agent_plugin/run_nimda_agent.py" ]; then
          echo "‚úÖ NIMDA Agent found"
          python3 nimda_agent_plugin/run_nimda_agent.py --command "status" || echo "NIMDA Agent test completed"
        else
          echo "‚ö†Ô∏è NIMDA Agent not found"
        fi
