#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å —á–µ—Ä–µ–∑ –∫–æ–¥–µ–∫—Å NIMDA
–°—Ñ–æ—Ä–º—É–ª—å–æ–≤–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Python 3.11 —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ —Ç–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –º–æ–≤–∏
"""

import subprocess
import sys


def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å"""
    print("ü§ñ –ó–ê–ü–£–°–ö –ê–í–¢–û–ú–ê–¢–ò–ó–û–í–ê–ù–û–ì–û –ö–û–î–ï–ö–°–£ NIMDA")
    print("=" * 60)

    # –ó–∞–≤–¥–∞–Ω–Ω—è 1: Python 3.11 Compliance Check
    print("üìã –ó–ê–í–î–ê–ù–ù–Ø 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ Python 3.11")
    print("üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –∑–∞–ø—É—Å–∫ python311_compliance.py")

    try:
        result = subprocess.run(
            [
                sys.executable,
                "/Users/dev/Documents/nimda_agent_plugin/python311_compliance.py",
            ],
            cwd="/Users/dev/Documents/nimda_agent_plugin",
            capture_output=True,
            text=True,
        )

        print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ Python 3.11:")
        print(result.stdout)
        if result.stderr:
            print("‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è:", result.stderr)

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è 1: {e}")

    print("\n" + "=" * 60)

    # –ó–∞–≤–¥–∞–Ω–Ω—è 2: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –º–æ–¥–µ—Ä–Ω—ñ–∑–∞—Ü—ñ—è –ø—Ä–æ–µ–∫—Ç—É
    print("üìã –ó–ê–í–î–ê–ù–ù–Ø 2: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –º–æ–¥–µ—Ä–Ω—ñ–∑–∞—Ü—ñ—è –ø—Ä–æ–µ–∫—Ç—É NIMDA")
    print("üéØ –ó–∞–ø—É—Å–∫ Advanced Task Manager –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è")

    try:
        result = subprocess.run(
            [
                sys.executable,
                "/Users/dev/Documents/nimda_agent_plugin/auto_dev_runner.py",
                "/Users/dev/Documents/nimda_agent_plugin/nimda_project_deep_build",
            ],
            cwd="/Users/dev/Documents/nimda_agent_plugin",
            capture_output=True,
            text=True,
        )

        print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –º–æ–¥–µ—Ä–Ω—ñ–∑–∞—Ü—ñ—ó:")
        print(result.stdout)
        if result.stderr:
            print("‚ö†Ô∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:", result.stderr)

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è 2: {e}")

    print("\n" + "=" * 60)

    # –ó–∞–≤–¥–∞–Ω–Ω—è 3: Production Workflow –¥–ª—è —Ñ—ñ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó
    print("üìã –ó–ê–í–î–ê–ù–ù–Ø 3: Production Workflow –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è")
    print("üéØ –ó–∞–ø—É—Å–∫ production workflow –¥–ª—è —Ñ—ñ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø—Ä–æ–µ–∫—Ç—É")

    try:
        # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —ñ –∑–∞–ø—É—Å–∫–∞—î–º–æ production workflow
        sys.path.append("/Users/dev/Documents/nimda_agent_plugin")
        from production_workflow import ProductionWorkflow

        workflow = ProductionWorkflow(
            "/Users/dev/Documents/nimda_agent_plugin/nimda_project_deep_build"
        )
        result = workflow.run_full_production_workflow()

        print("üìä Production Workflow –∑–∞–≤–µ—Ä—à–µ–Ω–æ:")
        print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ —Ñ–∞–π–ª—ñ–≤: {len(workflow.created_files)}")
        print(f"üîß –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–º–∏–ª–æ–∫: {len(workflow.fixed_errors)}")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è 3: {e}")

    print("\n" + "üéâ" * 20)
    print("ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ó–û–í–ê–ù–ò–ô –ö–û–î–ï–ö–° –ó–ê–í–ï–†–®–ò–í –†–û–ë–û–¢–£")
    print("üìã –í—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –ø–µ—Ä–µ–¥–∞–Ω–æ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º —Å–∏—Å—Ç–µ–º–∞–º")
    print("üéØ –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è—Ö")
    print("üéâ" * 20)


if __name__ == "__main__":
    main()
